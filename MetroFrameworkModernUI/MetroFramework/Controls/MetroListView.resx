<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ilCheckBoxes.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 56</value>
  </metadata>
  <data name="ilCheckBoxes.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAABo
        CAAAAk1TRnQBSQFMAgEBBgEAARgBAAEYAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABIAMAAQEBAAEYBgABGNgAJzMJACczaQADMyH/AzMJAAMzIf8DM2kAAzMh/wMzCQADMyH/AzNpAAMz
        If8DMwkAAzMG/wP2BmsD9g//AzNpAAMzIf8DMwkAAzMD/wP2A2sGSANrA/YM/wMzaQADMyH/AzMJAAMz
        A/YDawNIBuIDSANrA/YJ/wMzaQADMyH/AzMJAAMzA7gDSAPiBv8D4gNIA2sD9gb/AzNpAAMzIf8DMwkA
        AzMS/wPiA0gDawP2A/8DM2kAAzMh/wMzCQADMxX/A+IDSANrA/YDM2kAAzMh/wMzCQADMxj/A+IDSAO4
        AzNpAAMzIf8DMwkAAzMh/wMzaQADMyH/AzMJAAMzIf8DM2kAJzMJACcz/wD/AKsAAZkBZgEzAZkBZgEz
        AZkBZgEzAZkBZgEzAZkBZgEzAZkBZgEzAZkBZgEzAZkBZgEzAZkBZgEzAZkBZgEzAZkBZgEzAZkBZgEz
        AZkBZgEzCQABmQFmATMBmQFmATMBmQFmATMBmQFmATMBmQFmATMBmQFmATMBmQFmATMBmQFmATMBmQFm
        ATMBmQFmATMBmQFmATMBmQFmATMBmQFmATMJACeGCQAnhgkAAZkBZgEzDPEV/wGZAWYBMwkAAZkBZgEz
        CfEY/wGZAWYBMwkAA4Yh8QOGCQADhgzxBv8P8QOGCQABmQFmATMD6gzxEv8BmQFmATMJAAGZAWYBMwzx
        Ff8BmQFmATMJAAOGA/EDzAPXA90G4wzqA/EDhgkAA4YD8QPMA90D4wHMApkBzAKZA/EJ6gPxA4YJAAGZ
        AWYBMwbqDPEP/wGZAWYBMwkAAZkBZgEzA+oJ8QEzAZkBMxL/AZkBZgEzCQADhgPxA8AG6g/xA+MD8QOG
        CQADhgPxA8wD8QHMA5kBZgEzAZkBZgEzA8AD/wPxA+MD8QOGCQABmQFmATMJ6gzxDP8BmQFmATMJAAGZ
        AWYBMwbqA/EBMwGZAjMBmQIzAZkBMw//AZkBZgEzCQADhgPxA8AD4wbqDPED4wPxA4YJAAOGA/EDzAPj
        AZkBZgEzAZkBZgEzAZkBZgEzAZkCZgP/A/ED4wPxA4YJAAGZAWYBMwPjCeoM8Qn/AZkBZgEzCQABmQFm
        ATMG6gEzAZkCMwGZAjMBmQIzAZkCMwGZATMM/wGZAWYBMwkAA4YD8QPAA90D4wbqCfED3QPxA4YJAAOG
        A/ED4wGZAmYBmQFmATMD1wGZAmYBmQFmATMDwAPxA90D8QOGCQABmQFmATMG4wnqDPEG/wGZAWYBMwkA
        AZkBZgEzA+MD6gEzAZkCMwGZATMD8QEzAZkCMwGZAjMBmQEzCf8BmQFmATMJAAOGA/EDsgPXA90D4wzq
        A9cD8QOGCQADhgPxB8wCmQPqA8wBmQFmATMBmQJmA/8D1wPxA4YJAAGZAWYBMwnjCeoM8QP/AZkBZgEz
        CQABmQFmATMG4wEzAZkBMwbqA/EBMwGZAjMBmQIzAZkBMwb/AZkBZgEzCQADhgPxA7IDzAbXA90G4wPq
        A8wD8QOGCQADhgPxA7ID1wPjA9cD8QGZAmYBmQFmATMDzAPdA/EDhgkAAZkBZgEzA90J4wnqDPEBmQFm
        ATMJAAGZAWYBMwnjCeoD8QEzAZkCMwGZATMD8QP/AZkBZgEzCQADhgPxA7IJzAPXBt0D4wPMA/EDhgkA
        A4YD8QOyCcwD4wPAAZkBZgEzAZkCZgPqA/EDhgkAAZkBZgEzA9cD3QnjCeoJ8QGZAWYBMwkAAZkBZgEz
        DOMJ6gPxATMBmQEzBvEBmQFmATMJAAOGA/EDsgzMBtcD3QPAA/EDhgkAA4YD8QOyDMwD8QGZAmYBmQFm
        ATMDwAPxA4YJAAGZAWYBMwbXA90J4wnqBvEBmQFmATMJAAGZAWYBMw/jCeoJ8QGZAWYBMwkAA4YD8RWy
        BsAD8QOGCQADhgPxD7IEzASZAWYD3QPxA4YJAAGZAWYBMwnXA90J4wnqA/EBmQFmATMJAAGZAWYBMxLj
        CeoG8QGZAWYBMwkAA4Yh8QOGCQADhhXxBv8G8QOGCQABmQFmATMBmQFmATMBmQFmATMBmQFmATMBmQFm
        ATMBmQFmATMBmQFmATMBmQFmATMBmQFmATMBmQFmATMBmQFmATMBmQFmATMBmQFmATMJAAGZAWYBMwGZ
        AWYBMwGZAWYBMwGZAWYBMwGZAWYBMwGZAWYBMwGZAWYBMwGZAWYBMwGZAWYBMwGZAWYBMwGZAWYBMwGZ
        AWYBMwGZAWYBMwkAJ4YJACeG/wCEAAFCAU0BPgcAAT4DAAEoAwABQAMAASADAAEBAQABAQYAAQEWAAP/
        AQAE/wQAAcABAQHAAQEEAAHAAQEBwAEBBAABwAEBAcABAQQAAcABAQHAAQEEAAHAAQEBwAEBBAABwAEB
        AcABAQQAAcABAQHAAQEEAAHAAQEBwAEBBAABwAEBAcABAQQAAcABAQHAAQEEAAHAAQEBwAEBBAABwAEB
        AcABAQQAAcABAQHAAQEEAAT/BAAE/wQACP8BwAEBAcABAQHAAQEBwAEBAcABAQHAAQEBwAEBAcABAQHA
        AQEBwAEBAcABAQHAAQEBwAEBAcABAQHAAQEBwAEBAcABAQHAAQEBwAEBAcABAQHAAQEBwAEBAcABAQHA
        AQEBwAEBAcABAQHAAQEBwAEBAcABAQHAAQEBwAEBAcABAQHAAQEBwAEBAcABAQHAAQEBwAEBAcABAQHA
        AQEBwAEBAcABAQHAAQEBwAEBAcABAQHAAQEBwAEBAcABAQHAAQEBwAEBAcABAQHAAQEBwAEBEP8L
</value>
  </data>
  <metadata name="ilHeight.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>139, 17</value>
  </metadata>
  <metadata name="$this.TrayLargeIcon" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
</root>